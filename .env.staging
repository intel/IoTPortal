APP_NAME="Intel IoT Portal"
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=${DB_CONNECTION}
DB_PORT=3306
DB_DATABASE=inteliotportal
DB_USERNAME=root
DB_PASSWORD=

BROADCAST_DRIVER=log
CACHE_DRIVER=file
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=null
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

### MQTT ##########################################

MQTT_HOST=localhost
MQTT_PORT=1883
MQTT_USERNAME=
MQTT_PASSWORD=
MQTT_CLIENT_ID=iotportal
MQTT_CAFILE=
MQTT_CLEAN_SESSION=true
MQTT_LOGGING=true
MQTT_QUALITY_OF_SERVICE=0
MQTT_BLOCK_SOCKET=false
MQTT_KEEP_ALIVE=10
MQTT_TIMEOUT=5
MQTT_RESEND_TIMEOUT=10
MQTT_RETAIN=false
MQTT_WILL_TOPIC=
MQTT_WILL_MESSAGE=

### Environment ###########################################

# If you need to change the sources (i.e. to China), set CHANGE_SOURCE to true
CHANGE_SOURCE=false
# Set CHANGE_SOURCE and UBUNTU_SOURCE option if you want to change the Ubuntu system sources.list file.
UBUNTU_SOURCE=aliyun
# Set ORACLE INSTANT_CLIENT_MIRROR option if you want to use Intranet improve download, you can download files first
ORACLE_INSTANT_CLIENT_MIRROR=https://github.com/diogomascarenha/oracle-instantclient/raw/master/

### MYSQL #################################################

MYSQL_VERSION=latest

MYSQL_DATABASE="${DB_DATABASE}"
MYSQL_USER="${DB_USERNAME}"
MYSQL_PASSWORD="${DB_PASSWORD}"
MYSQL_PORT="${DB_PORT}"
MYSQL_ROOT_PASSWORD="${DB_PASSWORD}"
MYSQL_ENTRYPOINT_INITDB=./mysql/docker-entrypoint-initdb.d

### NGINX #################################################

NGINX_VERSION=alpine

NGINX_HOST_HTTP_PORT=80
NGINX_HOST_HTTPS_PORT=443
NGINX_HOST_LOG_PATH=./storage/logs/nginx/
NGINX_SITES_PATH=./docker-compose/nginx/sites/
NGINX_PHP_UPSTREAM_CONTAINER=app
NGINX_PHP_UPSTREAM_PORT=9000
NGINX_SSL_PATH=./docker-compose/nginx/ssl/

### VERNEMQ ##########################################

VERNEMQ_VERSION=latest-alpine

VERNEMQ_PORT="${MQTT_PORT}"

ACCEPT_EULA=yes
ALLOW_ANONYMOUS=on
PLUGINS_VMQ_ACL=off
PLUGINS_VMQ_WEBHOOKS=on
VMQ_WEBHOOKS_AUTH_ON_REGISTER_HOOK=auth_on_register
VMQ_WEBHOOKS_AUTH_ON_REGISTER_ENDPOINT="http://${DB_CONNECTION}/api/mqtt/endpoint"
VMQ_WEBHOOKS_AUTH_ON_SUBSCRIBE_HOOK=auth_on_subscribe
VMQ_WEBHOOKS_AUTH_ON_SUBSCRIBE_ENDPOINT="http://${DB_CONNECTION}/api/mqtt/endpoint"
VMQ_WEBHOOKS_AUTH_ON_PUBLISH_HOOK=auth_on_publish
VMQ_WEBHOOKS_AUTH_ON_PUBLISH_ENDPOINT="http://${DB_CONNECTION}/api/mqtt/endpoint"

### PHP MY ADMIN ##########################################

PMA_VERSION=latest

# Accepted values: mariadb - mysql

PMA_DB_ENGINE="${DB_CONNECTION}"

# Credentials/Port:

PMA_USER=${DB_USERNAME}"
PMA_PASSWORD="${DB_PASSWORD}"
PMA_ROOT_PASSWORD="${DB_PASSWORD}"
PMA_PORT=8081
