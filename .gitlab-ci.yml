image: registry.gitlab.com/desmondsow/i-iot-portal:latest

services:
  - mysql:latest

variables:
  MYSQL_DATABASE: inteliotportal
  MYSQL_ROOT_PASSWORD: secret
  DB_HOST: mysql
  DB_USERNAME: root

stages:
#  - test
  - deploy

#unit_test:
#  stage: test
#  script:
#    - cp .env.staging .env
#    - composer install
#    - curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
#    - apt install -y nodejs
#    - npm ci
#    - npm rebuild node-sass
#    - npm run production
#    - php artisan key:generate
#    - php artisan config:cache
#    - php artisan route:cache
#    - php artisan optimize
#    - php artisan migrate
#    - vendor/bin/phpunit

deploy_staging:
  stage: deploy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ~/.composer/vendor/bin/envoy run deploy --commit="$CI_COMMIT_SHA" --stagingSshHost=root@"$STAGING_SSH_HOST" --serverName="$SERVER_NAME" --appUrl="$APP_URL" --dbPassword="$DB_PASSWORD" --mqttHost="$MQTT_HOST" --unblockIp="$UNBLOCK_IP" --serverIp="$SERVER_IP"
  environment:
    name: production
    url: $APP_URL
  when: manual
  only:
    - master









































#image: lorisleiva/laravel-docker:latest
#
#variables:
#  MYSQL_DATABASE: homestead
#  MYSQL_ROOT_PASSWORD: secret
#  DB_HOST: mysql
#  DB_USERNAME: root
#
#.init_ssh: &init_ssh |
#  eval $(ssh-agent -s)
#  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#  mkdir -p ~/.ssh
#  chmod 700 ~/.ssh
#  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#
#  # Replace the last line with the following lines if you'd rather
#  # leave StrictHostKeyChecking enabled (replace yourdomain.com):
#  #
#  #  ssh-keyscan yourdomain.com >> ~/.ssh/known_hosts
#  #  chmod 644 ~/.ssh/known_hosts
#
#.change_file_permissions: &change_file_permissions |
#  find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
#  find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;
#
#composer:
#  stage: build
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}-composer
#    paths:
#      - vendor/
#  script:
#    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
#    - cp .env.example .env
#    - php artisan key:generate
#  artifacts:
#    expire_in: 1 month
#    paths:
#      - vendor/
#      - .env
#
#npm:
#  stage: build
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}-npm
#    paths:
#      - node_modules/
#  script:
#    - npm install
#    - npm run production
#  artifacts:
#    expire_in: 1 month
#    paths:
#      - node_modules/
#      - public/css/
#      - public/js/
#
#codestyle:
#  stage: test
#  dependencies: []
#  script:
#    - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app
#
#phpunit:
#  stage: test
#  dependencies:
#    - composer
#  script:
#    - phpunit --coverage-text --colors=never
#
#staging:
#  stage: deploy
#  script:
#    - *init_ssh
#    - *change_file_permissions
#    - php artisan deploy dev.yourdomain.com -s upload
#  environment:
#    name: staging
#    url: http://dev.yourdomain.com
#  only:
#    - master
#
#production:
#  stage: deploy
#  script:
#    - *init_ssh
#    - *change_file_permissions
#    - php artisan deploy yourdomain.com -s upload
#  environment:
#    name: production
#    url: http://yourdomain.com
#  when: manual
#  only:
#    - master